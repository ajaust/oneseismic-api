name: Performance tests

on:
  workflow_dispatch

jobs:
  prepare_env:
    name: Prepare build environment for Performance tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build image
        uses: "./.github/actions/build_performance_tests_image"

  performance_tests:
    # Required secrets:
    #
    # ENDPOINT : URL where server is running
    # STORAGE_ACCOUNT_NAME : name of the storage where server is assigned to (without blob.core.windows.net)
    # STORAGE_ACCOUNT_KEY : key used to access storage
    name: Pattern
    if: always()
    needs: prepare_env

    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        include:
          - name: Random inline slice (big file, small depth)
            filepath: "/tests/performance/script-random-inlineslice.js"
            vds: "testdata/varsize/varsize_4000_3000_5"
          - name: Sequential inline slices (big file, small depth)
            filepath: "/tests/performance/script-sequential-inlineslice.js"
            vds: "testdata/varsize/varsize_4000_3000_5"
          - name: Sequential inline slices (small file, big depth)
            filepath: "/tests/performance/script-sequential-inlineslice.js"
            vds: "testdata/varsize/varsize_500_300_2000"
          - name: Random sequential fence line (big file, small depth)
            filepath: "/tests/performance/script-random-fence.js"
            vds: "testdata/varsize/varsize_4000_3000_5"
          - name: Random horizon (small file, big depth)
            filepath: "/tests/performance/script-random-horizon.js"
            vds: "testdata/varsize/varsize_500_300_2000"

          # Multi-replica tests

          - name: Several parallel random slice requests to same VDS
            filepath: "/tests/performance/script-various-requests.js"
            vds: "testdata/varsize/varsize_500_300_2000"

    uses: ./.github/workflows/template_performance.yaml
    secrets: inherit
    with:
      name: ${{ matrix.name }}
      filepath: ${{ matrix.filepath }}
      vds: ${{ matrix.vds }}
